#!/usr/bin/env python
import sys
# this prints the usage statement if there are less than 7 Arguments
# this creates usage statement then exits the system once done
if (len(sys.argv)) < 6:
	print ""
	print "usage: hydropathyEDC.py -i <input file> -o <output file> -v <threshold value> w < window size>"
	print "-i: .fasta file"
	print "-v: threshold value"
	print "-w: window size"
	print ""
	sys.exit()

# this creates the arguments in the module
# for any argument in list of arguments in sys.argv
for i in range(len(sys.argv)):
	# sets the input directory to the first argument that follows -i
	if sys.argv[i] == "-i":
		InSeqFileName = sys.argv[i+1]
	# sets the output file name to the first argument that follows -o
	#elif sys.argv[i] == "-o":
		#OutFileName = sys.argv[i+1]
	# sets the threshold value equal to the first argument that follows -v
	elif sys.argv[i] == "-v":
		thresholdvalue = int(sys.argv[i+1])
	# sets the window size equal to the first argument that follows -w
	elif sys.argv[i] == "-w":
		window_size = int(sys.argv[i+1])
# make the dictionary
InFileName = "amino_acid_hydropathy_values.txt"
InFile = open(InFileName, 'r')
Hydropathy = {}
LineNumber = 0
for Line in InFile:
	if(LineNumber>0):
		Line = Line.strip("\n")
		Data = Line.split(",")
		Hydropathy[Data[1]]=float(Data[2])
	LineNumber = LineNumber + 1
InFile.close()
OutFileName = "windowsize" + window_size + " threshold" + thresholdvalue + ".output.csv"
# open write will not work because it will overwrite
# a+ will create and append the file
OutFile = open(OutFileName,"a+")
# initialize Variables
#window_size = int(window_size)
#thresholdvalue = int(thresholdvalue)
InSeqFile = open(InSeqFileName, 'r')
LineNumber = 0
# this is the variable which represents the name of the gene
gene_name = InSeqFileName.strip('.fasta')
for Line in InSeqFile:
	if(LineNumber>0):
		ProtSeq=Line.strip('\n')
	LineNumber+=1
InSeqFile.close()
window_counter=0
Value=0
for i in range(len(ProtSeq)):
	if(i>(window_size-1) and i<=(len(ProtSeq)-window_size)):
		if Value > thresholdvalue:
			OutString = "%s" % (gene_name)
			OutFile.write(OutString + "\n")
		Value = Value - Hydropathy[ProtSeq[i-window_size]]
	Value+=Hydropathy[ProtSeq[i]]
	window_counter+=1
OutFile.close()

"""
 for loop inside of for loop inside of for loop
for


for windowsize in {9, 15, 21}
do
	for thresholdvalue in {30, 40, 50}
		do
			for i in human_subsample_5/*.fasta
				do ./hydropathyEDC2.py -i $i -v $thresholdvalue -w $window_size
				done
		done
	done
# the dollar sign is telling the computer that it is a variable

"""












		#########################
"""
# this parsing the directory into files
# for the variable File in the human genome directory
for File in Indirectory:
# sets the variable InFile equal to File
	InFileName = File
# opens and reads the fasta file within the directory
	InFile = open(InFileName, 'r')
# closes the variable indirectory
Indirectory.close()
# now you are ready to run through the script
Hydropathy = {}
LineNumber = 0
for Line in InFile:
	if(LineNumber>0):
		Line = Line.strip("\n")
		Data = Line.split(",")
		Hydropathy[Data[1]]=float(Data[2])
		LineNumber = LineNumber + 1
InFile.close()
genename = File.strip('.fasta')
OutFile = open(OutFileName,"w")
window_size = int(window_size)
InSeqFile = open(InSeqFileName, 'r')
LineNumber = 0
for Line in InSeqFile:
	if(LineNumber>0):
		ProtSeq=Line.strip('\n')
	LineNumber+=1
InSeqFile.close()
window_counter=0
Value=0
for i in range(len(ProtSeq)):
	if(i>(window_size-1) and i<=(len(ProtSeq)-window_size)):
		OutString = "%s" % (genename)
		Value = Value - Hydropathy[ProtSeq[i-window_size]]
	Value+=Hydropathy[ProtSeq[i]]
	window_counter+=1
	if Value > thresholdvalue:
		OutFile.write(OutString + "\n")
OutFile.close()
"""
